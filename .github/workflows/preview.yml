name: Vercel Preview Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches-ignore:
      - main
jobs:
  Deploy-Preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node_modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        id: preview-deployment
        run: echo "GITHUB_PREVIEW_URL=$(vercel --prebuilt --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_ENV
      - name: Test
        run: echo $GITHUB_PREVIEW_URL
      - name: Add the preview report to pull request
        uses: mshick/add-pr-comment@v2
          message: ` Preview Link ` ${{ env.GITHUB_PREVIEW_URL }}
          proxy-url: ${{ steps.preview-deployment.outputs.result }}





          #  with:
          # script: 
          # | const message = [
          #   `Preview link: `,
          #   '|Name | Link|',
          #   '| --- | --- |',
          #   '| int-lms-web | `${{ env.GITHUB_PREVIEW_URL }}`'
          # ]
